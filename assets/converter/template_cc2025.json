{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# üìä Machine Learning Project: [Judul Proyek Kamu]\n",
    "\n",
    "**Nama:** [Nama Lengkap Kamu]  \n",
    "**Email Dicoding:** [Email yang kamu daftarkan di Dicoding]  \n",
    "**Tanggal:** [Tanggal Submission]\n",
    "\n",
    "> *Catatan: Gantilah semua isi placeholder ini dengan data proyek kamu.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. üß† Problem Statement\n",
    "Tuliskan deskripsi singkat mengenai masalah yang ingin diselesaikan dengan machine learning. Jelaskan juga jenis task ML yang digunakan (klasifikasi/regresi/time series)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. üìÇ Data Understanding\n",
    "Berikan penjelasan tentang dataset:\n",
    "- Sumber data (jika publik, cantumkan URL)\n",
    "- Jumlah sampel & fitur\n",
    "- Contoh kolom penting\n",
    "- Tujuan dari data ini\n",
    "\n",
    "> Dataset harus kuantitatif dan minimal 500 sampel."
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": [
    "# Import library yang dibutuhkan\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ],
   "outputs": []
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": [
    "# Load data\n",
    "df = pd.read_csv('/path/to/your/dataset.csv')  # Ganti path sesuai lokasi data\n",
    "df.head()"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. üßπ Data Preparation\n",
    "Langkah-langkah:\n",
    "- Handling missing values\n",
    "- Encoding\n",
    "- Feature scaling\n",
    "- Feature selection (jika ada)"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": [
    "# Contoh handling missing values\n",
    "df.isnull().sum()"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. üìä Exploratory Data Analysis (EDA)\n",
    "Lakukan visualisasi:\n",
    "- Distribusi target\n",
    "- Korelasi antar fitur\n",
    "- Boxplot, histogram, dll"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": [
    "# Contoh visualisasi distribusi target\n",
    "sns.countplot(x='target', data=df)"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. üèóÔ∏è Modeling\n",
    "Tentukan algoritma machine learning yang digunakan dan jelaskan alasannya. Kamu bisa menggunakan lebih dari satu model untuk perbandingan performa.\n",
    "\n",
    "- Klasifikasi ‚Üí Logistic Regression, Random Forest, SVM, dsb\n",
    "- Regresi ‚Üí Linear Regression, Decision Tree, dsb\n",
    "- Time series ‚Üí ARIMA, LSTM, dsb"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": [
    "# Contoh model sederhana\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "\n",
    "# Split data\n",
    "X = df.drop('target', axis=1)\n",
    "y = df['target']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Modeling\n",
    "model = RandomForestClassifier()\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Evaluation\n",
    "print(classification_report(y_test, y_pred))"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. üìà Evaluation\n",
    "Evaluasi hasil model menggunakan metrik yang sesuai:\n",
    "- Klasifikasi: accuracy, precision, recall, f1-score\n",
    "- Regresi: MAE, MSE, R2\n",
    "- Time series: RMSE, MAPE\n",
    "\n",
    "Sertakan grafik confusion matrix atau curve jika relevan."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7. üìù Conclusion & Next Step\n",
    "- Ringkasan hasil modeling\n",
    "- Apa insight yang didapat?\n",
    "- Apa potensi pengembangan berikutnya?\n",
    "- Apakah model sudah cukup baik untuk digunakan di dunia nyata?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "¬© 2025 ‚Äî *Dicoding Machine Learning Project Submission Template by [Your Name]*"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": ""
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
